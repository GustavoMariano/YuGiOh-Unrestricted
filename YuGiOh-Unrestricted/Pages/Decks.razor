@page "/decks"
@inject AppState App
@inject IDeckService DecksSvc
@inject NavigationManager Nav
@using YuGiOh_Unrestricted.Core.Models

<h3>Your Decks</h3>

@if (App.UserId == Guid.Empty)
{
    <p>Please login first. <a href="/login">Login</a></p>
}
else if (decks is null)
{
    <p>Loading...</p>
}
else
{
    <div style="display:flex; gap:12px; flex-wrap:wrap;">
        @foreach (var d in decks)
        {
            <div style="border:1px solid #666; padding:10px; width:260px;">
                <strong>@d.Name</strong> (<span>@d.Cards.Sum(c => c.Count)</span>/50)
                <div style="margin-top:8px;">
                    <!-- Abrir DeckBuilder direto -->
                    <NavLink class="btn" href="@($"/deckbuilder/{d.Id}")">Open</NavLink>
                </div>
            </div>
        }

        @if (decks.Count < 3)
        {
            <div style="border:1px dashed #666; padding:10px; width:260px; display:flex; align-items:center; justify-content:center;">
                <!-- Criar deck via rota dedicada -->
                <NavLink class="btn" href="/decks/create">Create new deck</NavLink>
            </div>
        }
    </div>
}

@code {
    private List<Deck>? decks;

    protected override async Task OnInitializedAsync()
    {
        if (App.UserId != Guid.Empty)
        {
            decks = await DecksSvc.GetUserDecksAsync(App.UserId);
        }
    }
}
